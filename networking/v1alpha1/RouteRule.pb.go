// Code generated by protoc-gen-go. DO NOT EDIT.
// source: networking/v1alpha1/RouteRule.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoadBalancerSettings_SimpleLB int32

const (
	LoadBalancerSettings_ROUND_ROBIN  LoadBalancerSettings_SimpleLB = 0
	LoadBalancerSettings_LEAST_CONN   LoadBalancerSettings_SimpleLB = 1
	LoadBalancerSettings_RANDOM       LoadBalancerSettings_SimpleLB = 2
	LoadBalancerSettings_PASS_THROUGH LoadBalancerSettings_SimpleLB = 3
)

var LoadBalancerSettings_SimpleLB_name = map[int32]string{
	0: "ROUND_ROBIN",
	1: "LEAST_CONN",
	2: "RANDOM",
	3: "PASS_THROUGH",
}

var LoadBalancerSettings_SimpleLB_value = map[string]int32{
	"ROUND_ROBIN":  0,
	"LEAST_CONN":   1,
	"RANDOM":       2,
	"PASS_THROUGH": 3,
}

func (x LoadBalancerSettings_SimpleLB) String() string {
	return proto.EnumName(LoadBalancerSettings_SimpleLB_name, int32(x))
}

func (LoadBalancerSettings_SimpleLB) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{12, 0}
}

type Service struct {
	ServiceName          string       `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Hosts                []string     `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Clusters             []*Cluster   `protobuf:"bytes,3,rep,name=clusters,proto3" json:"clusters,omitempty"`
	Rules                []*RouteRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{0}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Service) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Service) GetClusters() []*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *Service) GetRules() []*RouteRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Cluster struct {
	ClusterName          string         `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Endpoints            []*Endpoint    `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	TrafficPolicy        *TrafficPolicy `protobuf:"bytes,3,opt,name=traffic_policy,json=trafficPolicy,proto3" json:"traffic_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{1}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Cluster) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Cluster) GetTrafficPolicy() *TrafficPolicy {
	if m != nil {
		return m.TrafficPolicy
	}
	return nil
}

type Endpoint struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{2}
}

func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (m *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(m, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Endpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type RouteRule struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServiceName          string      `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	HttpRule             []*HttpRule `protobuf:"bytes,3,rep,name=http_rule,json=httpRule,proto3" json:"http_rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RouteRule) Reset()         { *m = RouteRule{} }
func (m *RouteRule) String() string { return proto.CompactTextString(m) }
func (*RouteRule) ProtoMessage()    {}
func (*RouteRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{3}
}

func (m *RouteRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteRule.Unmarshal(m, b)
}
func (m *RouteRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteRule.Marshal(b, m, deterministic)
}
func (m *RouteRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteRule.Merge(m, src)
}
func (m *RouteRule) XXX_Size() int {
	return xxx_messageInfo_RouteRule.Size(m)
}
func (m *RouteRule) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteRule.DiscardUnknown(m)
}

var xxx_messageInfo_RouteRule proto.InternalMessageInfo

func (m *RouteRule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RouteRule) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RouteRule) GetHttpRule() []*HttpRule {
	if m != nil {
		return m.HttpRule
	}
	return nil
}

type HttpRule struct {
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Match                *HttpMatchRequest       `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
	Route                []*HttpRouteDestination `protobuf:"bytes,3,rep,name=route,proto3" json:"route,omitempty"`
	Redirect             *HttpRedirect           `protobuf:"bytes,4,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Rewrite              *HttpRewrite            `protobuf:"bytes,5,opt,name=rewrite,proto3" json:"rewrite,omitempty"`
	Timeout              int32                   `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *HttpRule) Reset()         { *m = HttpRule{} }
func (m *HttpRule) String() string { return proto.CompactTextString(m) }
func (*HttpRule) ProtoMessage()    {}
func (*HttpRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{4}
}

func (m *HttpRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRule.Unmarshal(m, b)
}
func (m *HttpRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRule.Marshal(b, m, deterministic)
}
func (m *HttpRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRule.Merge(m, src)
}
func (m *HttpRule) XXX_Size() int {
	return xxx_messageInfo_HttpRule.Size(m)
}
func (m *HttpRule) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRule.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRule proto.InternalMessageInfo

func (m *HttpRule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpRule) GetMatch() *HttpMatchRequest {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *HttpRule) GetRoute() []*HttpRouteDestination {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *HttpRule) GetRedirect() *HttpRedirect {
	if m != nil {
		return m.Redirect
	}
	return nil
}

func (m *HttpRule) GetRewrite() *HttpRewrite {
	if m != nil {
		return m.Rewrite
	}
	return nil
}

func (m *HttpRule) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type HttpMatchRequest struct {
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uri                  *StringMatch            `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Scheme               *StringMatch            `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Method               *StringMatch            `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Authority            *StringMatch            `protobuf:"bytes,5,opt,name=authority,proto3" json:"authority,omitempty"`
	Headers              map[string]*StringMatch `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Port                 int32                   `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	SourceLabels         map[string]string       `protobuf:"bytes,8,rep,name=source_labels,json=sourceLabels,proto3" json:"source_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	QueryParams          map[string]*StringMatch `protobuf:"bytes,9,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IgnoreUriCase        bool                    `protobuf:"varint,10,opt,name=ignore_uri_case,json=ignoreUriCase,proto3" json:"ignore_uri_case,omitempty"`
	WithoutHeaders       map[string]*StringMatch `protobuf:"bytes,11,rep,name=without_headers,json=withoutHeaders,proto3" json:"without_headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *HttpMatchRequest) Reset()         { *m = HttpMatchRequest{} }
func (m *HttpMatchRequest) String() string { return proto.CompactTextString(m) }
func (*HttpMatchRequest) ProtoMessage()    {}
func (*HttpMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{5}
}

func (m *HttpMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpMatchRequest.Unmarshal(m, b)
}
func (m *HttpMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpMatchRequest.Marshal(b, m, deterministic)
}
func (m *HttpMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpMatchRequest.Merge(m, src)
}
func (m *HttpMatchRequest) XXX_Size() int {
	return xxx_messageInfo_HttpMatchRequest.Size(m)
}
func (m *HttpMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HttpMatchRequest proto.InternalMessageInfo

func (m *HttpMatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpMatchRequest) GetUri() *StringMatch {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *HttpMatchRequest) GetScheme() *StringMatch {
	if m != nil {
		return m.Scheme
	}
	return nil
}

func (m *HttpMatchRequest) GetMethod() *StringMatch {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *HttpMatchRequest) GetAuthority() *StringMatch {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (m *HttpMatchRequest) GetHeaders() map[string]*StringMatch {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HttpMatchRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HttpMatchRequest) GetSourceLabels() map[string]string {
	if m != nil {
		return m.SourceLabels
	}
	return nil
}

func (m *HttpMatchRequest) GetQueryParams() map[string]*StringMatch {
	if m != nil {
		return m.QueryParams
	}
	return nil
}

func (m *HttpMatchRequest) GetIgnoreUriCase() bool {
	if m != nil {
		return m.IgnoreUriCase
	}
	return false
}

func (m *HttpMatchRequest) GetWithoutHeaders() map[string]*StringMatch {
	if m != nil {
		return m.WithoutHeaders
	}
	return nil
}

type StringMatch struct {
	// Types that are valid to be assigned to StringMatch:
	//	*StringMatch_Exact
	//	*StringMatch_Prefix
	//	*StringMatch_Regex
	StringMatch          isStringMatch_StringMatch `protobuf_oneof:"string_match"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StringMatch) Reset()         { *m = StringMatch{} }
func (m *StringMatch) String() string { return proto.CompactTextString(m) }
func (*StringMatch) ProtoMessage()    {}
func (*StringMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{6}
}

func (m *StringMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMatch.Unmarshal(m, b)
}
func (m *StringMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMatch.Marshal(b, m, deterministic)
}
func (m *StringMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMatch.Merge(m, src)
}
func (m *StringMatch) XXX_Size() int {
	return xxx_messageInfo_StringMatch.Size(m)
}
func (m *StringMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMatch.DiscardUnknown(m)
}

var xxx_messageInfo_StringMatch proto.InternalMessageInfo

type isStringMatch_StringMatch interface {
	isStringMatch_StringMatch()
}

type StringMatch_Exact struct {
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type StringMatch_Prefix struct {
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3,oneof"`
}

type StringMatch_Regex struct {
	Regex string `protobuf:"bytes,3,opt,name=regex,proto3,oneof"`
}

func (*StringMatch_Exact) isStringMatch_StringMatch() {}

func (*StringMatch_Prefix) isStringMatch_StringMatch() {}

func (*StringMatch_Regex) isStringMatch_StringMatch() {}

func (m *StringMatch) GetStringMatch() isStringMatch_StringMatch {
	if m != nil {
		return m.StringMatch
	}
	return nil
}

func (m *StringMatch) GetExact() string {
	if x, ok := m.GetStringMatch().(*StringMatch_Exact); ok {
		return x.Exact
	}
	return ""
}

func (m *StringMatch) GetPrefix() string {
	if x, ok := m.GetStringMatch().(*StringMatch_Prefix); ok {
		return x.Prefix
	}
	return ""
}

func (m *StringMatch) GetRegex() string {
	if x, ok := m.GetStringMatch().(*StringMatch_Regex); ok {
		return x.Regex
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StringMatch) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StringMatch_OneofMarshaler, _StringMatch_OneofUnmarshaler, _StringMatch_OneofSizer, []interface{}{
		(*StringMatch_Exact)(nil),
		(*StringMatch_Prefix)(nil),
		(*StringMatch_Regex)(nil),
	}
}

func _StringMatch_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StringMatch)
	// string_match
	switch x := m.StringMatch.(type) {
	case *StringMatch_Exact:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Exact)
	case *StringMatch_Prefix:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Prefix)
	case *StringMatch_Regex:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Regex)
	case nil:
	default:
		return fmt.Errorf("StringMatch.StringMatch has unexpected type %T", x)
	}
	return nil
}

func _StringMatch_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StringMatch)
	switch tag {
	case 1: // string_match.exact
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.StringMatch = &StringMatch_Exact{x}
		return true, err
	case 2: // string_match.prefix
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.StringMatch = &StringMatch_Prefix{x}
		return true, err
	case 3: // string_match.regex
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.StringMatch = &StringMatch_Regex{x}
		return true, err
	default:
		return false, nil
	}
}

func _StringMatch_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StringMatch)
	// string_match
	switch x := m.StringMatch.(type) {
	case *StringMatch_Exact:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Exact)))
		n += len(x.Exact)
	case *StringMatch_Prefix:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Prefix)))
		n += len(x.Prefix)
	case *StringMatch_Regex:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Regex)))
		n += len(x.Regex)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HttpRouteDestination struct {
	Destination *Destination `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// Types that are valid to be assigned to XWeight:
	//	*HttpRouteDestination_Weight
	XWeight              isHttpRouteDestination_XWeight `protobuf_oneof:"_weight"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *HttpRouteDestination) Reset()         { *m = HttpRouteDestination{} }
func (m *HttpRouteDestination) String() string { return proto.CompactTextString(m) }
func (*HttpRouteDestination) ProtoMessage()    {}
func (*HttpRouteDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{7}
}

func (m *HttpRouteDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRouteDestination.Unmarshal(m, b)
}
func (m *HttpRouteDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRouteDestination.Marshal(b, m, deterministic)
}
func (m *HttpRouteDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRouteDestination.Merge(m, src)
}
func (m *HttpRouteDestination) XXX_Size() int {
	return xxx_messageInfo_HttpRouteDestination.Size(m)
}
func (m *HttpRouteDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRouteDestination.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRouteDestination proto.InternalMessageInfo

func (m *HttpRouteDestination) GetDestination() *Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

type isHttpRouteDestination_XWeight interface {
	isHttpRouteDestination_XWeight()
}

type HttpRouteDestination_Weight struct {
	Weight int32 `protobuf:"varint,2,opt,name=weight,proto3,oneof"`
}

func (*HttpRouteDestination_Weight) isHttpRouteDestination_XWeight() {}

func (m *HttpRouteDestination) GetXWeight() isHttpRouteDestination_XWeight {
	if m != nil {
		return m.XWeight
	}
	return nil
}

func (m *HttpRouteDestination) GetWeight() int32 {
	if x, ok := m.GetXWeight().(*HttpRouteDestination_Weight); ok {
		return x.Weight
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HttpRouteDestination) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HttpRouteDestination_OneofMarshaler, _HttpRouteDestination_OneofUnmarshaler, _HttpRouteDestination_OneofSizer, []interface{}{
		(*HttpRouteDestination_Weight)(nil),
	}
}

func _HttpRouteDestination_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HttpRouteDestination)
	// _weight
	switch x := m.XWeight.(type) {
	case *HttpRouteDestination_Weight:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Weight))
	case nil:
	default:
		return fmt.Errorf("HttpRouteDestination.XWeight has unexpected type %T", x)
	}
	return nil
}

func _HttpRouteDestination_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HttpRouteDestination)
	switch tag {
	case 2: // _weight.weight
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.XWeight = &HttpRouteDestination_Weight{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _HttpRouteDestination_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HttpRouteDestination)
	// _weight
	switch x := m.XWeight.(type) {
	case *HttpRouteDestination_Weight:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Weight))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Destination struct {
	Subset               string   `protobuf:"bytes,1,opt,name=subset,proto3" json:"subset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{8}
}

func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetSubset() string {
	if m != nil {
		return m.Subset
	}
	return ""
}

type HttpRedirect struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Authority            string   `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Scheme               string   `protobuf:"bytes,4,opt,name=scheme,proto3" json:"scheme,omitempty"`
	RedirectCode         string   `protobuf:"bytes,5,opt,name=redirect_code,json=redirectCode,proto3" json:"redirect_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRedirect) Reset()         { *m = HttpRedirect{} }
func (m *HttpRedirect) String() string { return proto.CompactTextString(m) }
func (*HttpRedirect) ProtoMessage()    {}
func (*HttpRedirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{9}
}

func (m *HttpRedirect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRedirect.Unmarshal(m, b)
}
func (m *HttpRedirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRedirect.Marshal(b, m, deterministic)
}
func (m *HttpRedirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRedirect.Merge(m, src)
}
func (m *HttpRedirect) XXX_Size() int {
	return xxx_messageInfo_HttpRedirect.Size(m)
}
func (m *HttpRedirect) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRedirect.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRedirect proto.InternalMessageInfo

func (m *HttpRedirect) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *HttpRedirect) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *HttpRedirect) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HttpRedirect) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *HttpRedirect) GetRedirectCode() string {
	if m != nil {
		return m.RedirectCode
	}
	return ""
}

type HttpRewrite struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Authority            string   `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRewrite) Reset()         { *m = HttpRewrite{} }
func (m *HttpRewrite) String() string { return proto.CompactTextString(m) }
func (*HttpRewrite) ProtoMessage()    {}
func (*HttpRewrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{10}
}

func (m *HttpRewrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRewrite.Unmarshal(m, b)
}
func (m *HttpRewrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRewrite.Marshal(b, m, deterministic)
}
func (m *HttpRewrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRewrite.Merge(m, src)
}
func (m *HttpRewrite) XXX_Size() int {
	return xxx_messageInfo_HttpRewrite.Size(m)
}
func (m *HttpRewrite) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRewrite.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRewrite proto.InternalMessageInfo

func (m *HttpRewrite) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *HttpRewrite) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

type TrafficPolicy struct {
	LoadBalancer         *LoadBalancerSettings `protobuf:"bytes,1,opt,name=load_balancer,json=loadBalancer,proto3" json:"load_balancer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TrafficPolicy) Reset()         { *m = TrafficPolicy{} }
func (m *TrafficPolicy) String() string { return proto.CompactTextString(m) }
func (*TrafficPolicy) ProtoMessage()    {}
func (*TrafficPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{11}
}

func (m *TrafficPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficPolicy.Unmarshal(m, b)
}
func (m *TrafficPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficPolicy.Marshal(b, m, deterministic)
}
func (m *TrafficPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficPolicy.Merge(m, src)
}
func (m *TrafficPolicy) XXX_Size() int {
	return xxx_messageInfo_TrafficPolicy.Size(m)
}
func (m *TrafficPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficPolicy proto.InternalMessageInfo

func (m *TrafficPolicy) GetLoadBalancer() *LoadBalancerSettings {
	if m != nil {
		return m.LoadBalancer
	}
	return nil
}

type LoadBalancerSettings struct {
	Simple               LoadBalancerSettings_SimpleLB `protobuf:"varint,1,opt,name=simple,proto3,enum=lhotse.networking.v1alpha1.LoadBalancerSettings_SimpleLB" json:"simple,omitempty"`
	ConsistentHash       *ConsistentHashLb             `protobuf:"bytes,2,opt,name=consistent_hash,json=consistentHash,proto3" json:"consistent_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *LoadBalancerSettings) Reset()         { *m = LoadBalancerSettings{} }
func (m *LoadBalancerSettings) String() string { return proto.CompactTextString(m) }
func (*LoadBalancerSettings) ProtoMessage()    {}
func (*LoadBalancerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{12}
}

func (m *LoadBalancerSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancerSettings.Unmarshal(m, b)
}
func (m *LoadBalancerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancerSettings.Marshal(b, m, deterministic)
}
func (m *LoadBalancerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancerSettings.Merge(m, src)
}
func (m *LoadBalancerSettings) XXX_Size() int {
	return xxx_messageInfo_LoadBalancerSettings.Size(m)
}
func (m *LoadBalancerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancerSettings proto.InternalMessageInfo

func (m *LoadBalancerSettings) GetSimple() LoadBalancerSettings_SimpleLB {
	if m != nil {
		return m.Simple
	}
	return LoadBalancerSettings_ROUND_ROBIN
}

func (m *LoadBalancerSettings) GetConsistentHash() *ConsistentHashLb {
	if m != nil {
		return m.ConsistentHash
	}
	return nil
}

type ConsistentHashLb struct {
	HttpHeaderName         string   `protobuf:"bytes,1,opt,name=http_header_name,json=httpHeaderName,proto3" json:"http_header_name,omitempty"`
	UseSourceIp            bool     `protobuf:"varint,2,opt,name=use_source_ip,json=useSourceIp,proto3" json:"use_source_ip,omitempty"`
	HttpQueryParameterName string   `protobuf:"bytes,3,opt,name=http_query_parameter_name,json=httpQueryParameterName,proto3" json:"http_query_parameter_name,omitempty"`
	MinimumRingSize        int32    `protobuf:"varint,4,opt,name=minimum_ring_size,json=minimumRingSize,proto3" json:"minimum_ring_size,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ConsistentHashLb) Reset()         { *m = ConsistentHashLb{} }
func (m *ConsistentHashLb) String() string { return proto.CompactTextString(m) }
func (*ConsistentHashLb) ProtoMessage()    {}
func (*ConsistentHashLb) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e94672247bdee2, []int{13}
}

func (m *ConsistentHashLb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsistentHashLb.Unmarshal(m, b)
}
func (m *ConsistentHashLb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsistentHashLb.Marshal(b, m, deterministic)
}
func (m *ConsistentHashLb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsistentHashLb.Merge(m, src)
}
func (m *ConsistentHashLb) XXX_Size() int {
	return xxx_messageInfo_ConsistentHashLb.Size(m)
}
func (m *ConsistentHashLb) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsistentHashLb.DiscardUnknown(m)
}

var xxx_messageInfo_ConsistentHashLb proto.InternalMessageInfo

func (m *ConsistentHashLb) GetHttpHeaderName() string {
	if m != nil {
		return m.HttpHeaderName
	}
	return ""
}

func (m *ConsistentHashLb) GetUseSourceIp() bool {
	if m != nil {
		return m.UseSourceIp
	}
	return false
}

func (m *ConsistentHashLb) GetHttpQueryParameterName() string {
	if m != nil {
		return m.HttpQueryParameterName
	}
	return ""
}

func (m *ConsistentHashLb) GetMinimumRingSize() int32 {
	if m != nil {
		return m.MinimumRingSize
	}
	return 0
}

func init() {
	proto.RegisterEnum("lhotse.networking.v1alpha1.LoadBalancerSettings_SimpleLB", LoadBalancerSettings_SimpleLB_name, LoadBalancerSettings_SimpleLB_value)
	proto.RegisterType((*Service)(nil), "lhotse.networking.v1alpha1.Service")
	proto.RegisterType((*Cluster)(nil), "lhotse.networking.v1alpha1.Cluster")
	proto.RegisterType((*Endpoint)(nil), "lhotse.networking.v1alpha1.Endpoint")
	proto.RegisterType((*RouteRule)(nil), "lhotse.networking.v1alpha1.RouteRule")
	proto.RegisterType((*HttpRule)(nil), "lhotse.networking.v1alpha1.HttpRule")
	proto.RegisterType((*HttpMatchRequest)(nil), "lhotse.networking.v1alpha1.HttpMatchRequest")
	proto.RegisterMapType((map[string]*StringMatch)(nil), "lhotse.networking.v1alpha1.HttpMatchRequest.HeadersEntry")
	proto.RegisterMapType((map[string]*StringMatch)(nil), "lhotse.networking.v1alpha1.HttpMatchRequest.QueryParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "lhotse.networking.v1alpha1.HttpMatchRequest.SourceLabelsEntry")
	proto.RegisterMapType((map[string]*StringMatch)(nil), "lhotse.networking.v1alpha1.HttpMatchRequest.WithoutHeadersEntry")
	proto.RegisterType((*StringMatch)(nil), "lhotse.networking.v1alpha1.StringMatch")
	proto.RegisterType((*HttpRouteDestination)(nil), "lhotse.networking.v1alpha1.HttpRouteDestination")
	proto.RegisterType((*Destination)(nil), "lhotse.networking.v1alpha1.Destination")
	proto.RegisterType((*HttpRedirect)(nil), "lhotse.networking.v1alpha1.HttpRedirect")
	proto.RegisterType((*HttpRewrite)(nil), "lhotse.networking.v1alpha1.HttpRewrite")
	proto.RegisterType((*TrafficPolicy)(nil), "lhotse.networking.v1alpha1.TrafficPolicy")
	proto.RegisterType((*LoadBalancerSettings)(nil), "lhotse.networking.v1alpha1.LoadBalancerSettings")
	proto.RegisterType((*ConsistentHashLb)(nil), "lhotse.networking.v1alpha1.ConsistentHashLb")
}

func init() {
	proto.RegisterFile("networking/v1alpha1/RouteRule.proto", fileDescriptor_b4e94672247bdee2)
}

var fileDescriptor_b4e94672247bdee2 = []byte{
	// 1186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x5d, 0x6f, 0x1b, 0x45,
	0x17, 0xee, 0xda, 0xf1, 0xd7, 0x59, 0xdb, 0x71, 0xe7, 0x8d, 0xa2, 0x7d, 0x0b, 0x42, 0x61, 0x4b,
	0xc1, 0x20, 0xe4, 0xd0, 0x70, 0x43, 0x41, 0xa5, 0xc4, 0x49, 0xc0, 0x91, 0xd2, 0x24, 0x1d, 0x37,
	0x42, 0xe2, 0x66, 0x99, 0xac, 0x27, 0xde, 0xa1, 0xfb, 0xd5, 0x99, 0xd9, 0xa6, 0xe9, 0x3d, 0x12,
	0x88, 0x0b, 0xfe, 0x12, 0xe2, 0x86, 0x2b, 0xfe, 0x07, 0x3f, 0x03, 0xed, 0xcc, 0xac, 0xbd, 0x69,
	0x8d, 0x93, 0x5c, 0xf4, 0x6e, 0xcf, 0xd9, 0xf3, 0x3c, 0xe7, 0x63, 0x66, 0x9f, 0x99, 0x85, 0xbb,
	0x31, 0x95, 0xe7, 0x09, 0x7f, 0xc6, 0xe2, 0xe9, 0xe6, 0x8b, 0xfb, 0x24, 0x4c, 0x03, 0x72, 0x7f,
	0x13, 0x27, 0x99, 0xa4, 0x38, 0x0b, 0xe9, 0x20, 0xe5, 0x89, 0x4c, 0xd0, 0x9d, 0x30, 0x48, 0xa4,
	0xa0, 0x83, 0x79, 0xec, 0xa0, 0x88, 0x75, 0xff, 0xb0, 0xa0, 0x31, 0xa6, 0xfc, 0x05, 0xf3, 0x29,
	0x7a, 0x1f, 0xda, 0x42, 0x3f, 0x7a, 0x31, 0x89, 0xa8, 0x63, 0x6d, 0x58, 0xfd, 0x16, 0xb6, 0x8d,
	0xef, 0x90, 0x44, 0x14, 0xad, 0x41, 0x2d, 0x48, 0x84, 0x14, 0x4e, 0x65, 0xa3, 0xda, 0x6f, 0x61,
	0x6d, 0xa0, 0x47, 0xd0, 0xf4, 0xc3, 0x4c, 0x48, 0xca, 0x85, 0x53, 0xdd, 0xa8, 0xf6, 0xed, 0xad,
	0xbb, 0x83, 0xff, 0xce, 0x39, 0xd8, 0xd1, 0xb1, 0x78, 0x06, 0x42, 0x5f, 0x41, 0x8d, 0x67, 0x21,
	0x15, 0xce, 0x8a, 0x42, 0xdf, 0x5b, 0x86, 0x9e, 0x75, 0x87, 0x35, 0xc6, 0xfd, 0xd3, 0x82, 0x86,
	0xa1, 0xcc, 0x5b, 0x30, 0xa4, 0x97, 0x5a, 0x30, 0x3e, 0xd5, 0xc2, 0x10, 0x5a, 0x34, 0x9e, 0xa4,
	0x09, 0x8b, 0x4d, 0x1b, 0xf6, 0xd6, 0x07, 0xcb, 0xf2, 0xed, 0x99, 0x60, 0x3c, 0x87, 0xa1, 0x63,
	0xe8, 0x4a, 0x4e, 0xce, 0xce, 0x98, 0xef, 0xa5, 0x49, 0xc8, 0xfc, 0x0b, 0xa7, 0xba, 0x61, 0xf5,
	0xed, 0xad, 0x8f, 0x97, 0x11, 0x3d, 0xd5, 0x88, 0x63, 0x05, 0xc0, 0x1d, 0x59, 0x36, 0xdd, 0x01,
	0x34, 0x8b, 0x44, 0xa8, 0x0b, 0x15, 0x96, 0x9a, 0xd2, 0x2b, 0x2c, 0x45, 0x08, 0x56, 0xd2, 0x84,
	0x4b, 0xa7, 0xb2, 0x61, 0xf5, 0x6b, 0x58, 0x3d, 0xbb, 0x3f, 0x5b, 0xd0, 0x9a, 0x4d, 0x22, 0x8f,
	0x28, 0xb5, 0xab, 0x9e, 0xdf, 0x58, 0xcd, 0xca, 0x9b, 0xab, 0xb9, 0x0d, 0xad, 0x40, 0xca, 0xd4,
	0xcb, 0xe7, 0x68, 0x16, 0x6e, 0xe9, 0x28, 0x46, 0x52, 0xa6, 0x6a, 0xf2, 0xcd, 0xc0, 0x3c, 0xb9,
	0x7f, 0x57, 0xa0, 0x59, 0xb8, 0x17, 0x96, 0x31, 0x84, 0x5a, 0x44, 0xa4, 0x1f, 0xa8, 0xfc, 0xf6,
	0xd6, 0xa7, 0x57, 0xf1, 0x3f, 0xce, 0x83, 0x31, 0x7d, 0x9e, 0x51, 0x21, 0xb1, 0x86, 0xa2, 0x6f,
	0xa1, 0xc6, 0xf3, 0x5e, 0x4d, 0x8d, 0x9f, 0x5d, 0x59, 0x63, 0x1e, 0xbc, 0x4b, 0x85, 0x64, 0x31,
	0x91, 0x2c, 0x89, 0xb1, 0x86, 0xa3, 0x5d, 0x68, 0x72, 0x3a, 0x61, 0x9c, 0xfa, 0xd2, 0x59, 0x51,
	0xe5, 0xf4, 0xaf, 0xa4, 0x32, 0xf1, 0x78, 0x86, 0x44, 0xdb, 0xd0, 0xe0, 0xf4, 0x9c, 0x33, 0x49,
	0x9d, 0x9a, 0x22, 0xf9, 0xe8, 0x6a, 0x12, 0x15, 0x8e, 0x0b, 0x1c, 0x72, 0xa0, 0x21, 0x59, 0x44,
	0x93, 0x4c, 0x3a, 0x75, 0xb5, 0xa8, 0x85, 0xe9, 0xfe, 0xd3, 0x84, 0xde, 0xeb, 0x63, 0x58, 0x38,
	0xd7, 0x07, 0x50, 0xcd, 0x38, 0x33, 0x53, 0x5d, 0x5a, 0xc1, 0x58, 0x72, 0x16, 0x4f, 0x35, 0x61,
	0x8e, 0x41, 0x8f, 0xa0, 0x2e, 0xfc, 0x80, 0x46, 0xd4, 0xec, 0xda, 0x6b, 0xa3, 0x0d, 0x2c, 0x27,
	0x88, 0xa8, 0x0c, 0x92, 0x89, 0x99, 0xe2, 0xf5, 0x09, 0x34, 0x0c, 0xed, 0x41, 0x8b, 0x64, 0x32,
	0x48, 0x38, 0x93, 0x17, 0xd7, 0x19, 0x62, 0x99, 0x63, 0x8e, 0x44, 0x63, 0x68, 0x04, 0x94, 0x4c,
	0x72, 0xd9, 0xa9, 0xab, 0x9d, 0xf1, 0xe0, 0x26, 0xbb, 0x6b, 0x30, 0xd2, 0xd8, 0xbd, 0x58, 0xf2,
	0x0b, 0x5c, 0x30, 0xcd, 0xbe, 0xb6, 0xc6, 0xfc, 0x6b, 0x43, 0x3e, 0x74, 0x44, 0x92, 0x71, 0x9f,
	0x7a, 0x21, 0x39, 0xa5, 0xa1, 0x70, 0x9a, 0x2a, 0xdd, 0xd7, 0x37, 0x4a, 0x37, 0x56, 0x0c, 0x07,
	0x8a, 0x40, 0xe7, 0x6c, 0x8b, 0x92, 0x0b, 0xfd, 0x08, 0xed, 0xe7, 0x19, 0xe5, 0x17, 0x5e, 0x4a,
	0x38, 0x89, 0x84, 0xd3, 0x52, 0x39, 0x1e, 0xde, 0x28, 0xc7, 0x93, 0x9c, 0xe0, 0x58, 0xe1, 0x75,
	0x0a, 0xfb, 0xf9, 0xdc, 0x83, 0x3e, 0x84, 0x55, 0x36, 0x8d, 0x13, 0x4e, 0xbd, 0x8c, 0x33, 0xcf,
	0x27, 0x82, 0x3a, 0xb0, 0x61, 0xf5, 0x9b, 0xb8, 0xa3, 0xdd, 0x27, 0x9c, 0xed, 0x10, 0x41, 0x11,
	0x83, 0xd5, 0x73, 0x26, 0x83, 0x24, 0x93, 0x5e, 0x31, 0x5f, 0x5b, 0x15, 0xf3, 0xcd, 0x8d, 0x8a,
	0xf9, 0x5e, 0x73, 0x5c, 0x1a, 0x73, 0xf7, 0xfc, 0x92, 0xf3, 0x8e, 0x0f, 0xed, 0xf2, 0x7b, 0xd4,
	0x83, 0xea, 0x33, 0x7a, 0x61, 0x76, 0x7a, 0xfe, 0x88, 0x1e, 0x42, 0xed, 0x05, 0x09, 0x33, 0x7a,
	0xd3, 0xad, 0xae, 0x51, 0x5f, 0x56, 0xbe, 0xb0, 0xee, 0x3c, 0x82, 0xdb, 0x6f, 0x0c, 0x7f, 0x41,
	0xa6, 0xb5, 0x72, 0xa6, 0x56, 0x99, 0x60, 0x0a, 0xbd, 0xd7, 0x27, 0xfb, 0x76, 0x2a, 0xfd, 0x09,
	0xfe, 0xb7, 0x60, 0x6a, 0x6f, 0x25, 0x97, 0x3b, 0x05, 0xbb, 0xf4, 0x06, 0xad, 0x43, 0x8d, 0xbe,
	0x24, 0xbe, 0xd4, 0x59, 0x46, 0xb7, 0xb0, 0x36, 0x91, 0x03, 0xf5, 0x94, 0xd3, 0x33, 0xf6, 0x52,
	0x8f, 0x65, 0x74, 0x0b, 0x1b, 0x3b, 0x47, 0x70, 0x3a, 0xa5, 0x2f, 0x95, 0x8c, 0x28, 0x84, 0x32,
	0x87, 0x5d, 0x68, 0x0b, 0x45, 0xec, 0x29, 0xf9, 0x76, 0x7f, 0xb5, 0x60, 0x6d, 0x91, 0x2c, 0xa3,
	0x7d, 0xb0, 0x27, 0x73, 0x53, 0x25, 0xbe, 0xa2, 0x95, 0xb2, 0xa8, 0x97, 0xb1, 0xe8, 0x1d, 0xa8,
	0x9f, 0x53, 0x36, 0x0d, 0xcc, 0x29, 0x99, 0x57, 0xa9, 0xed, 0x5f, 0x2c, 0x6b, 0xd8, 0x82, 0x86,
	0xa7, 0x2d, 0xf7, 0x1e, 0xd8, 0xe5, 0x0a, 0xd6, 0xa1, 0x2e, 0xb2, 0x53, 0x41, 0x4d, 0xd7, 0xd8,
	0x58, 0xee, 0xef, 0x16, 0xb4, 0xcb, 0xf2, 0x9f, 0xaf, 0x40, 0x2e, 0xb7, 0x66, 0x05, 0x72, 0x15,
	0x7d, 0xb7, 0xac, 0x61, 0x7a, 0xc7, 0x94, 0xa4, 0xa9, 0x50, 0x91, 0x6a, 0x49, 0x45, 0xd6, 0x67,
	0xba, 0xbb, 0x62, 0x92, 0x69, 0x39, 0xbd, 0x0b, 0x9d, 0xe2, 0x70, 0xf1, 0xfc, 0x64, 0xa2, 0x8f,
	0x95, 0x16, 0x6e, 0x17, 0xce, 0x9d, 0x64, 0x42, 0xdd, 0x87, 0x60, 0x97, 0x8e, 0x92, 0x9b, 0xd6,
	0xe3, 0x9e, 0x41, 0xe7, 0xd2, 0xfd, 0x03, 0x9d, 0x40, 0x27, 0x4c, 0xc8, 0xc4, 0x3b, 0x25, 0x21,
	0x89, 0x7d, 0xca, 0xcd, 0xf4, 0x97, 0x9e, 0xad, 0x07, 0x09, 0x99, 0x0c, 0x4d, 0xfc, 0x98, 0x4a,
	0xc9, 0xe2, 0xa9, 0xc0, 0xed, 0xb0, 0xe4, 0x75, 0x7f, 0xab, 0xc0, 0xda, 0xa2, 0x30, 0xf4, 0x04,
	0xea, 0x82, 0x45, 0x69, 0xa8, 0x4f, 0xb1, 0xee, 0x72, 0xa9, 0x5e, 0xc4, 0x30, 0x18, 0x2b, 0xf8,
	0xc1, 0x10, 0x1b, 0x22, 0x74, 0x02, 0xab, 0x7e, 0x12, 0x0b, 0x26, 0x24, 0x8d, 0xa5, 0x17, 0x10,
	0x71, 0xad, 0x4b, 0xc6, 0xce, 0x0c, 0x32, 0x22, 0x22, 0x38, 0x38, 0xc5, 0x5d, 0xff, 0x92, 0xc7,
	0xdd, 0x87, 0x66, 0x91, 0x0a, 0xad, 0x82, 0x8d, 0x8f, 0x4e, 0x0e, 0x77, 0x3d, 0x7c, 0x34, 0xdc,
	0x3f, 0xec, 0xdd, 0x42, 0x5d, 0x80, 0x83, 0xbd, 0xed, 0xf1, 0x53, 0x6f, 0xe7, 0xe8, 0xf0, 0xb0,
	0x67, 0x21, 0x80, 0x3a, 0xde, 0x3e, 0xdc, 0x3d, 0x7a, 0xdc, 0xab, 0xa0, 0x1e, 0xb4, 0x8f, 0xb7,
	0xc7, 0x63, 0xef, 0xe9, 0x08, 0x1f, 0x9d, 0x7c, 0x37, 0xea, 0x55, 0xdd, 0xbf, 0x2c, 0xe8, 0xbd,
	0x9e, 0x0f, 0xf5, 0xa1, 0xa7, 0x6e, 0x5d, 0x5a, 0x5a, 0xcb, 0xf7, 0xd4, 0x6e, 0xee, 0xd7, 0x1f,
	0xbe, 0xba, 0x9f, 0xb9, 0xd0, 0xc9, 0x04, 0xf5, 0xcc, 0xd1, 0xc3, 0x52, 0xd5, 0x5e, 0x13, 0xdb,
	0x99, 0xa0, 0x5a, 0xcf, 0xf6, 0x53, 0xf4, 0x00, 0xfe, 0xaf, 0xd8, 0x4a, 0x47, 0x07, 0x9d, 0x5d,
	0x7f, 0xd5, 0x87, 0x89, 0xd7, 0xf3, 0x80, 0xb9, 0x7e, 0xd1, 0xe2, 0x26, 0xfc, 0x09, 0xdc, 0x8e,
	0x58, 0xcc, 0xa2, 0x2c, 0xf2, 0xd4, 0xd7, 0x2a, 0xd8, 0x2b, 0xbd, 0x35, 0x6b, 0x78, 0xd5, 0xbc,
	0xc0, 0x2c, 0x9e, 0x8e, 0xd9, 0x2b, 0x3a, 0xdc, 0x05, 0xd7, 0x4f, 0xa2, 0x62, 0xae, 0x24, 0x65,
	0x8b, 0x66, 0xfb, 0xc3, 0x7b, 0xfa, 0xfd, 0x26, 0x49, 0xd9, 0xe6, 0x82, 0x3f, 0x93, 0xd3, 0xba,
	0xfa, 0x21, 0xf9, 0xfc, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x95, 0x25, 0x6f, 0x62, 0xb7, 0x0c,
	0x00, 0x00,
}
